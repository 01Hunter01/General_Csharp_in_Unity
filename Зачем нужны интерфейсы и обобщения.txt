1.Зачем нужны интерфейсы? И их отличие от классов.

По моему мнению, интерфейсы решают проблему наслеловательности классов. По-скольку, производный класс может иметь только один базовый класс, то интерфейсов он может иметь сколько угодно. Таким образом, функционал класса расширяется.
Также, один интерфейс может быть ипользован двумя абсолютно разными классами и таким образом неявно их связать (они не будут знать о существовании друг друга).
Отличия интрефейсов от класса:
- интерфейсы не содержат в себе реализацию методов, это делается в классе;
- члены интерфейса являются неявно абстрактными, в то время как классы могут содержать как абстрактные, так и методы с реализацией;
- интерфейсы не могут содержать в себе конструкторы;

2.Зачем нужны обобщение? И привести несколько примеров их использования.

Обобщения нужны для того, чтобы создать какой-то класс или член класса с общим параметром типа. Это дает возможость не создавать для каждого конкретного типа свой класс или член класса, а просто наследоваться от обобщенного.
Также мы решаем проблему с boxing and unboxing, которые затрачивают очень много ресурсов.

Пример:

namespace TestTemplate
{
	internal sealed class Example : MonoBehaviour
	{
		private void Start()
		{
			Display(32);
			Display(2.35);
			Display("Hello, World");
		}



		private void Display<T>(T value)
		{
			Debug.Log(value);
		}
	}
}